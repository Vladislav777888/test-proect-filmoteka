{"mappings":"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","sources":["src/js/api-servise.js","src/js/refs.js","src/js/structure/render.js","src/js/structure/pagination-scroll.js"],"sourcesContent":["export { fetchGenres, fetchMovies };\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '46cf2a6d2c28bead868caabe4f80f475';\n\nfunction fetchGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n\n    .catch(err => console.log('Error!'));\n}\n\nfunction fetchMovies(page) {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n\n    .catch(err => console.log('Error!'));\n}\n","export { refs };\n\nconst refs = {\n  form: document.querySelector('.js-header-form'),\n  btnWatched: document.querySelector('#btn-watched'),\n  btnQueue: document.querySelector('#btn-queue'),\n  filmotekaList: document.querySelector('.films-list'),\n  btnPref: document.querySelector('.pagintion__btn--pref'),\n  btnNext: document.querySelector('.pagintion__btn--next'),\n  paginationList: document.querySelector('.pagination-list'),\n};\n","import { fetchGenres, fetchMovies } from '../api-servise';\nimport { refs } from '../refs';\n\nconst LOCALSTORAGE_KEY = 'genres';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nconst FAKE_POSTER =\n  'https://freesvg.org/img/cyberscooty-movie-video-tape-remix.png';\n\n// Переменная для страниц\nlet page = 1;\n\n// Делаем запрос на бекенд и рендерим популярные фильмы и пагинацию //\nfetchMovies(page)\n  .then(data => {\n    // console.log(data);\n    renderFilms(data);\n    refs.paginationList.innerHTML = renderPagination(data);\n\n    const maxPage = data.total_pages;\n\n    if (maxPage < 5) {\n      refs.paginationList.style.justifyContent = 'center';\n    }\n\n    if (maxPage === 1) {\n      refs.btnNext.setAttribute('disabled', true);\n    }\n\n    // Делаем активной кнопку первой страницы //\n    document\n      .querySelector('.pagination-list__btn')\n      .classList.add('pagination-list__btn--active');\n\n    // Убираем класс is-hidden из кнопок \"next\" и \"prev\" //\n    refs.btnNext.classList.remove('is-hidden');\n    refs.btnPref.classList.remove('is-hidden');\n  })\n  .catch(err => console.log(err));\n\n// Делаю запрос на локалсторедж для получения массива жанров фильмов\nfetchGenres()\n  .then(array => {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(array));\n  })\n  .catch(err => console.log(err));\n\nconst genres = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY));\n// console.log(genres);\n\n// Функция для рендера популярных фильмов на первую страницу //\nfunction renderFilms(data) {\n  const markup = data.results\n    .map(({ poster_path, title, release_date, genre_ids, id }) => {\n      genresArray = [];\n      let filmGenres = '';\n      genres.genres.map(genre => {\n        if (genre_ids.includes(genre['id'])) {\n          return genresArray.push(genre['name']);\n        }\n      });\n      filmGenres = genresArray.join(', ');\n\n      if (!genre_ids || genre_ids.length === 0) {\n        filmGenres = 'genre unknown';\n      }\n\n      if (!poster_path) {\n        poster_path = FAKE_POSTER;\n      } else {\n        poster_path = BASE_POSTER_URL + poster_path;\n      }\n\n      if (!title) {\n        title = 'no name';\n      }\n\n      if (!release_date) {\n        release_date = '';\n      }\n\n      return `<li class=\"films-list__item\" data-id=\"${id}\">\n  <a href=\"\" class=\"films-list__link\">\n    <img\n      src=\"${poster_path}\"\n      alt=\"${title}\"\n      class=\"films-list__img\"\n      loading=\"lazy\"\n    />\n    <h2 class=\"films-list__title\">${title}</h2>\n    <span class=\"films-list__text-ganres\">${filmGenres}</span>\n    <span class=\"films-list__span\">|</span>\n    <span class=\"films-list__text-date\">${release_date.split('-')[0]}</span>    \n  </a>\n</li>`;\n    })\n    .join('');\n  refs.filmotekaList.innerHTML = markup;\n}\n\n// Функция для рендера пагинации //\nfunction renderPagination(data) {\n  let markup = [];\n\n  // Перебираю все страницы из бекенда для того чтобы зарендерить соответсвующее количество кнопок в пагинацию //\n  for (let i = 1; i <= data.total_pages; i += 1) {\n    markup.push(i);\n  }\n\n  return markup\n    .map(number => {\n      return `<li class=\"pagination-list__item\">\n            <button type=\"button\" class=\"pagination-list__btn\">${number}</button>\n        </li>`;\n    })\n    .join('');\n}\n","import { refs } from '../refs';\n\n// Вешаем события на кнопки листания вперед и назад и на кнопки с номером страницы\nrefs.btnNext.addEventListener('click', onBtnNext);\nrefs.btnPref.addEventListener('click', onBtnPref);\nrefs.paginationList.addEventListener('click', onPaginationList);\n\n// Делаю изначально кнопку листания назад и вперед неактивной\nrefs.btnPref.setAttribute('disabled', true);\n\n// Переменные для листания страниц\nlet page = 1;\nlet iterator = 1;\nlet transformValue = 0;\n\n// Функция для обработки клика по кнопке \"next\" для листания страниц //\nfunction onBtnNext() {\n  page += 1;\n\n  // Делаю активной кнопку листания назад\n  refs.btnPref.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector('.pagination-list__btn--active');\n  let parentBtnActive = btnActive.parentElement;\n  let nextParentBtnActive = parentBtnActive.nextElementSibling;\n  let nextBtnActive = nextParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      // console.log(data);\n      renderFilms(data);\n\n      const maxPage = data.total_pages;\n\n      // Вызоов функции для листания вперед\n      transformPaginationNext(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания вперед\n      giveAttributeBtnNext(page, maxPage);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика по кнопке \"prev\" для листания страниц //\nfunction onBtnPref() {\n  page -= 1;\n\n  // Делаю активной кнопку листания вперед\n  refs.btnNext.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector(\n    '.pagination-list__item .pagination-list__btn--active'\n  );\n  let parentBtnActive = btnActive.parentElement;\n  let prevParentBtnActive = parentBtnActive.previousElementSibling;\n  let nextBtnActive = prevParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      // console.log(data);\n      renderFilms(data);\n\n      // Вызоов функции для листания назад\n      transformPaginationPref(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания назад\n      giveAttributeBtnPref(page);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика непосредственно по кнопкам страниц для листания //\nfunction onPaginationList(evt) {\n  page = Number(evt.target.textContent);\n\n  const btnActive = document.querySelector('.pagination-list__btn--active');\n  const eventTarget = evt.target;\n\n  if (btnActive !== eventTarget) {\n    fetchMovies(page)\n      .then(data => {\n        // console.log(data);\n\n        renderFilms(data);\n\n        const maxPage = data.total_pages;\n\n        // Условия для того чтобы выбрать в какую сторону листаются страницы\n        if (Number(evt.target.textContent) > Number(btnActive.textContent)) {\n          // Вызов функции для листания страниц вперед\n          transformPaginationNextWithEvt(evt, page, data);\n        } else {\n          // Вызов функции для листания страниц назад\n          transformPaginationPrefWithEvt(evt, page, data);\n        }\n\n        // Снятие и добавление класса активности\n        btnActive.classList.remove('pagination-list__btn--active');\n        evt.target.classList.add('pagination-list__btn--active');\n\n        // Вызов функций для добавления атрибутов неактивности кнопкам листания вперед и назад когда пришли к первой или последней странице\n        giveAttributeBtnPref(page);\n        giveAttributeBtnNext(page, maxPage);\n      })\n      .catch(err => console.log(err));\n  }\n}\n\n// ========================================================================================\n\n// функции для добавления атрибута неактивности кнопке листания назад\nfunction giveAttributeBtnPref(page) {\n  if (page > 1) {\n    refs.btnPref.removeAttribute('disabled');\n  } else {\n    refs.btnPref.setAttribute('disabled', true);\n  }\n}\n\n// функции для добавления атрибута неактивности кнопке листания вперед\nfunction giveAttributeBtnNext(page, maxPage) {\n  if (page === maxPage) {\n    refs.btnNext.setAttribute('disabled', true);\n  } else {\n    refs.btnNext.removeAttribute('disabled');\n  }\n}\n\n// функции для листания вперед\nfunction transformPaginationNext(page, data) {\n  const maxPage = data.total_pages;\n\n  if (page > 3 && page <= maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n}\n\n// функции для листания назад\nfunction transformPaginationPref(page, data) {\n  const maxPage = data.total_pages;\n\n  if (page >= 3 && page < maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n}\n\n// функции для листания страниц вперед при клике по номерам страниц\nfunction transformPaginationNextWithEvt(evt, page, data) {\n  const maxPage = data.total_pages;\n\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = evtTargetValue - btnActiveValue;\n  const condition = btnActiveValue === 1 || btnActiveValue === 2;\n  const condition2 =\n    evtTargetValue === maxPage - 2 || evtTargetValue === maxPage - 1;\n  const condition3 = btnActiveValue === maxPage - 3;\n\n  // Разные проверки для правильного листания страниц\n  if (page > 3 && page <= maxPage - 2 && total === 1 && !condition2) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (page > 3 && page <= maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n  }\n\n  if (condition && evtTargetValue === 4 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (condition && evtTargetValue === 5 && maxPage !== 5 && maxPage !== 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n  }\n\n  if (condition && evtTargetValue === 5 && maxPage !== 5 && maxPage === 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 40px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n}\n\n// функции для листания страниц назад при клике по номерам страниц\nfunction transformPaginationPrefWithEvt(evt, page, data) {\n  const maxPage = data.total_pages;\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = btnActiveValue - evtTargetValue;\n  const condition = evtTargetValue === 2 || evtTargetValue === maxPage - 3;\n  const condition2 =\n    btnActiveValue === maxPage || btnActiveValue === maxPage - 1;\n  const condition3 = evtTargetValue === maxPage - 3;\n  const condition4 = evtTargetValue === maxPage - 4;\n\n  // Разные проверки для правильного листания страниц\n  if (page >= 3 && page < maxPage - 2 && total === 1) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (page >= 3 && page < maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n  }\n\n  if (btnActiveValue === 4 && condition && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (condition2 && condition4 && maxPage !== 5 && maxPage !== 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n  }\n\n  if (condition2 && condition4 && maxPage !== 5 && maxPage === 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 40px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n}\n"],"names":["$f61f7e40fbe4d1e6$var$BASE_URL","$f61f7e40fbe4d1e6$var$API_KEY","page","$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","btnWatched","btnQueue","filmotekaList","btnPref","btnNext","paginationList","$b0f7bee4d53024e5$var$LOCALSTORAGE_KEY","$b0f7bee4d53024e5$var$BASE_POSTER_URL","$b0f7bee4d53024e5$var$FAKE_POSTER","fetch","concat","then","response","ok","Error","status","json","catch","err","console","log","data","markup","results","map","param","poster_path","title","release_date","genre_ids","id","genresArray","filmGenres","$b0f7bee4d53024e5$var$genres","genres","genre","includes","push","join","length","split","innerHTML","$b0f7bee4d53024e5$var$renderFilms","i","total_pages","number","$b0f7bee4d53024e5$var$renderPagination","maxPage","style","justifyContent","setAttribute","classList","add","remove","array","localStorage","setItem","JSON","stringify","parse","getItem","addEventListener","$14ef529d140e1c72$var$page","removeAttribute","btnActive","parentElement","nextElementSibling","firstElementChild","fetchMovies","renderFilms","page3","transform","$14ef529d140e1c72$var$iterator","transition","$14ef529d140e1c72$var$transformValue","$14ef529d140e1c72$var$transformPaginationNext","$14ef529d140e1c72$var$giveAttributeBtnNext","previousElementSibling","page4","$14ef529d140e1c72$var$transformPaginationPref","$14ef529d140e1c72$var$giveAttributeBtnPref","evt","Number","target","textContent","eventTarget","page5","btnActiveValue","evtTargetValue","total","condition","condition2","condition3","$14ef529d140e1c72$var$transformPaginationNextWithEvt","page6","condition4","$14ef529d140e1c72$var$transformPaginationPrefWithEvt","page1","page2"],"version":3,"file":"index.2a0b1700.js.map"}