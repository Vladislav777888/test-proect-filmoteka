{"mappings":"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","sources":["src/js/refs.js","src/js/fetchMovies.js","src/js/api-servis.js"],"sourcesContent":["export { refs };\n\nconst refs = {\n  form: document.querySelector('.js-header-form'),\n  btnWatched: document.querySelector('#btn-watched'),\n  btnQueue: document.querySelector('#btn-queue'),\n  filmotekaList: document.querySelector('.films-list'),\n  btnPref: document.querySelector('.pagintion__btn--pref'),\n  btnNext: document.querySelector('.pagintion__btn--next'),\n  paginationList: document.querySelector('.pagination-list'),\n};\n","export { fetchMovies };\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '46cf2a6d2c28bead868caabe4f80f475';\n\nfunction fetchMovies(page) {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n\n    .catch(err => console.log('Error!'));\n}\n","import { fetchMovies } from './fetchMovies';\nimport { refs } from './refs';\n\n// Переменная для страниц\nlet page = 1;\n\n// Переменные для листания страниц\nlet iterator = 1;\nlet transformValue = 0;\n\n// Вешаем события на кнопки листания вперед и назад и на кнопки с номером страницы\nrefs.btnNext.addEventListener('click', onBtnNext);\nrefs.btnPref.addEventListener('click', onBtnPref);\nrefs.paginationList.addEventListener('click', onPaginationList);\n\n// Делаю изначально кнопку листания назад и вперед неактивной\nrefs.btnPref.setAttribute('disabled', true);\n// refs.btnNext.setAttribute('disabled', true);\n\n// Делаем запрос на бекенд и рендерим популярные фильмы и пагинацию //\nfetchMovies(page)\n  .then(data => {\n    renderFilms(data);\n    refs.paginationList.innerHTML = renderPagination(data);\n\n    const maxPage = 10;\n\n    if (maxPage < 5) {\n      refs.paginationList.style.justifyContent = 'center';\n    }\n\n    if (maxPage === 1) {\n      refs.btnNext.setAttribute('disabled', true);\n    }\n\n    // Делаем активной кнопку первой страницы //\n    document\n      .querySelector('.pagination-list__btn')\n      .classList.add('pagination-list__btn--active');\n\n    // Убираем класс is-hidden из кнопок \"next\" и \"prev\" //\n    refs.btnNext.classList.remove('is-hidden');\n    refs.btnPref.classList.remove('is-hidden');\n  })\n  .catch(err => console.log(err));\n\n// Функция для рендера популярных фильмов на первую страницу //\nfunction renderFilms(data) {\n  const markup = data.results\n    .map(({ poster_path, title, release_date, media_type }) => {\n      return `<li class=\"films-list__item\">\n                    <a href=\"\" class=\"films-list__link\">\n                        <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" class=\"films-list__img\" />\n                        <h2 class=\"films-list__title\">${title}</h2>\n                        <span class=\"films-list__text-ganres\">${media_type}</span>\n                        <span class=\"films-list__span\">|</span>\n                        <span class=\"films-list__text-date\">${\n                          release_date.split('-')[0]\n                        }</span>\n                    </a>\n                </li>`;\n    })\n    .join('');\n  refs.filmotekaList.innerHTML = markup;\n}\n\n// Функция для рендера пагинации //\nfunction renderPagination(data) {\n  let markup = [];\n\n  // Перебираю все страницы из бекенда для того чтобы зарендерить соответсвующее количество кнопок в пагинацию //\n  for (let i = 1; i <= 10; i += 1) {\n    markup.push(i);\n  }\n\n  return markup\n    .map(number => {\n      return `<li class=\"pagination-list__item\">\n            <button type=\"button\" class=\"pagination-list__btn\">${number}</button>\n        </li>`;\n    })\n    .join('');\n}\n\n// Функция для обработки клика по кнопке \"next\" для листания страниц //\nfunction onBtnNext() {\n  page += 1;\n\n  // Делаю активной кнопку листания назад\n  refs.btnPref.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector('.pagination-list__btn--active');\n  let parentBtnActive = btnActive.parentElement;\n  let nextParentBtnActive = parentBtnActive.nextElementSibling;\n  let nextBtnActive = nextParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      console.log(data);\n      renderFilms(data);\n\n      const maxPage = 10;\n\n      // Вызоов функции для листания вперед\n      transformPaginationNext(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания вперед\n      giveAttributeBtnNext(page, maxPage);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика по кнопке \"prev\" для листания страниц //\nfunction onBtnPref() {\n  page -= 1;\n\n  // Делаю активной кнопку листания вперед\n  refs.btnNext.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector(\n    '.pagination-list__item .pagination-list__btn--active'\n  );\n  let parentBtnActive = btnActive.parentElement;\n  let prevParentBtnActive = parentBtnActive.previousElementSibling;\n  let nextBtnActive = prevParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      console.log(data);\n      renderFilms(data);\n\n      // Вызоов функции для листания назад\n      transformPaginationPref(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания назад\n      giveAttributeBtnPref(page);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика непосредственно по кнопкам страниц для листания //\nfunction onPaginationList(evt) {\n  page = Number(evt.target.textContent);\n\n  const btnActive = document.querySelector('.pagination-list__btn--active');\n  const eventTarget = evt.target;\n\n  if (btnActive !== eventTarget) {\n    fetchMovies(page)\n      .then(data => {\n        console.log(data);\n\n        renderFilms(data);\n\n        const maxPage = 10;\n\n        // Условия для того чтобы выбрать в какую сторону листаются страницы\n        if (Number(evt.target.textContent) > Number(btnActive.textContent)) {\n          // Вызов функции для листания страниц вперед\n          transformPaginationNextWithEvt(evt, page, data);\n        } else {\n          // Вызов функции для листания страниц назад\n          transformPaginationPrefWithEvt(evt, page, data);\n        }\n\n        // Снятие и добавление класса активности\n        btnActive.classList.remove('pagination-list__btn--active');\n        evt.target.classList.add('pagination-list__btn--active');\n\n        // Вызов функций для добавления атрибутов неактивности кнопкам листания вперед и назад когда пришли к первой или последней странице\n        giveAttributeBtnPref(page);\n        giveAttributeBtnNext(page, maxPage);\n      })\n      .catch(err => console.log(err));\n  }\n}\n\n// ==============================================================\n// функции для добавления атрибута неактивности кнопке листания назад\nfunction giveAttributeBtnPref(page) {\n  if (page > 1) {\n    refs.btnPref.removeAttribute('disabled');\n  } else {\n    refs.btnPref.setAttribute('disabled', true);\n  }\n}\n\n// функции для добавления атрибута неактивности кнопке листания вперед\nfunction giveAttributeBtnNext(page, maxPage) {\n  if (page === maxPage) {\n    refs.btnNext.setAttribute('disabled', true);\n  } else {\n    refs.btnNext.removeAttribute('disabled');\n  }\n}\n\n// функции для листания вперед\nfunction transformPaginationNext(page, data) {\n  const maxPage = 10;\n\n  if (page > 3 && page <= maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n}\n\n// функции для листания назад\nfunction transformPaginationPref(page, data) {\n  const maxPage = 10;\n\n  if (page >= 3 && page < maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n}\n\n// функции для листания страниц вперед при клике по номерам страниц\nfunction transformPaginationNextWithEvt(evt, page, data) {\n  const maxPage = 10;\n\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = evtTargetValue - btnActiveValue;\n  const condition = btnActiveValue === 1 || btnActiveValue === 2;\n  const condition2 =\n    evtTargetValue === maxPage - 2 || evtTargetValue === maxPage - 1;\n  const condition3 = btnActiveValue === maxPage - 3;\n\n  // Разные проверки для правильного листания страниц\n  if (page > 3 && page <= maxPage - 2 && total === 1) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n    console.log(11);\n  }\n\n  if (page > 3 && page <= maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n    console.log(22);\n  }\n\n  if (condition && evtTargetValue === 4 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n    console.log(33);\n  }\n\n  if (condition && evtTargetValue === 5 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n    console.log(44);\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n    console.log(55);\n  }\n}\n\n// функции для листания страниц назад при клике по номерам страниц\nfunction transformPaginationPrefWithEvt(evt, page, data) {\n  const maxPage = 10;\n\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = btnActiveValue - evtTargetValue;\n  const condition = evtTargetValue === 2 || evtTargetValue === maxPage - 3;\n  const condition2 =\n    btnActiveValue === maxPage || btnActiveValue === maxPage - 1;\n  const condition3 = evtTargetValue === maxPage - 3;\n  const condition4 = evtTargetValue === maxPage - 4;\n\n  // Разные проверки для правильного листания страниц\n  if (page >= 3 && page < maxPage - 2 && total === 1) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n    console.log(1);\n  }\n\n  if (page >= 3 && page < maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n    console.log(2);\n  }\n\n  if (btnActiveValue === 4 && condition && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n    console.log(3);\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n    console.log(4);\n  }\n\n  if (condition2 && condition4 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n    console.log(5);\n  }\n}\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","btnWatched","btnQueue","filmotekaList","btnPref","btnNext","paginationList","$ec6c8fa7e3d4acfc$export$88181abcadffafee","page","fetch","concat","then","response","ok","Error","status","json","catch","err","console","log","$d4c3e1d59718a170$var$page","$d4c3e1d59718a170$var$iterator","$d4c3e1d59718a170$var$transformValue","$d4c3e1d59718a170$var$renderFilms","data","markup","results","map","param","poster_path","title","release_date","media_type","split","join","innerHTML","$d4c3e1d59718a170$var$giveAttributeBtnPref","page1","removeAttribute","setAttribute","$d4c3e1d59718a170$var$giveAttributeBtnNext","page2","maxPage","addEventListener","btnActive","parentElement","nextElementSibling","firstElementChild","classList","add","remove","page3","style","transform","transition","$d4c3e1d59718a170$var$transformPaginationNext","previousElementSibling","page4","evt","Number","target","textContent","eventTarget","page5","btnActiveValue","evtTargetValue","total","condition","condition2","condition3","$d4c3e1d59718a170$var$transformPaginationNextWithEvt","page6","condition4","$d4c3e1d59718a170$var$transformPaginationPrefWithEvt","i","push","number","$d4c3e1d59718a170$var$renderPagination"],"version":3,"file":"index.8c84b6fc.js.map"}