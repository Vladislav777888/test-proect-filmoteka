{"mappings":"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","sources":["src/js/refs.js","src/js/api-servise.js","src/js/structure/render.js","src/js/structure/pagination-scroll.js"],"sourcesContent":["export { refs };\n\nconst refs = {\n  form: document.querySelector('.js-header-form'),\n  btnWatched: document.querySelector('#btn-watched'),\n  btnQueue: document.querySelector('#btn-queue'),\n  filmotekaList: document.querySelector('.films-list'),\n  btnPref: document.querySelector('.pagintion__btn--pref'),\n  btnNext: document.querySelector('.pagintion__btn--next'),\n  paginationList: document.querySelector('.pagination-list'),\n};\n","export { fetchGenres, fetchMovies };\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '46cf2a6d2c28bead868caabe4f80f475';\n\nfunction fetchGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n\n    .catch(err => console.log('Error!'));\n}\n\nfunction fetchMovies(page) {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n\n    .catch(err => console.log('Error!'));\n}\n","import { fetchGenres, fetchMovies } from '../api-servise';\nimport { refs } from '../refs';\n\nconst LOCALSTORAGE_KEY = 'genres';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nconst FAKE_POSTER =\n  'https://freesvg.org/img/cyberscooty-movie-video-tape-remix.png';\n\n// Переменная для страниц\nlet page = 1;\n\n// Делаем запрос на бекенд и рендерим популярные фильмы и пагинацию //\nfetchMovies(page)\n  .then(data => {\n    // console.log(data);\n    renderFilms(data);\n    refs.paginationList.innerHTML = renderPagination(data);\n\n    const maxPage = data.total_pages;\n\n    if (maxPage < 5) {\n      refs.paginationList.style.justifyContent = 'center';\n    }\n\n    if (maxPage === 1) {\n      refs.btnNext.setAttribute('disabled', true);\n    }\n\n    // Делаем активной кнопку первой страницы //\n    document\n      .querySelector('.pagination-list__btn')\n      .classList.add('pagination-list__btn--active');\n\n    // Убираем класс is-hidden из кнопок \"next\" и \"prev\" //\n    refs.btnNext.classList.remove('is-hidden');\n    refs.btnPref.classList.remove('is-hidden');\n  })\n  .catch(err => console.log(err));\n\n// Делаю запрос на локалсторедж для получения массива жанров фильмов\nfetchGenres()\n  .then(array => {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(array));\n  })\n  .catch(err => console.log(err));\n\nconst genres = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY));\n// console.log(genres);\n\n// Функция для рендера популярных фильмов на первую страницу //\nfunction renderFilms(data) {\n  const markup = data.results\n    .map(({ poster_path, title, release_date, genre_ids, id }) => {\n      genresArray = [];\n      let filmGenres = '';\n      genres.genres.map(genre => {\n        if (genre_ids.includes(genre['id'])) {\n          return genresArray.push(genre['name']);\n        }\n      });\n      filmGenres = genresArray.join(', ');\n\n      if (!genre_ids || genre_ids.length === 0) {\n        filmGenres = 'genre unknown';\n      }\n\n      if (!poster_path) {\n        poster_path = FAKE_POSTER;\n      } else {\n        poster_path = BASE_POSTER_URL + poster_path;\n      }\n\n      if (!title) {\n        title = 'no name';\n      }\n\n      if (!release_date) {\n        release_date = '';\n      }\n\n      return `<li class=\"films-list__item\" data-id=\"${id}\">\n  <a href=\"\" class=\"films-list__link\">\n    <img\n      src=\"${poster_path}\"\n      alt=\"${title}\"\n      class=\"films-list__img\"\n      loading=\"lazy\"\n    />\n    <h2 class=\"films-list__title\">${title}</h2>\n    <span class=\"films-list__text-ganres\">${filmGenres}</span>\n    <span class=\"films-list__span\">|</span>\n    <span class=\"films-list__text-date\">${release_date.split('-')[0]}</span>    \n  </a>\n</li>`;\n    })\n    .join('');\n  refs.filmotekaList.innerHTML = markup;\n}\n\n// Функция для рендера пагинации //\nfunction renderPagination(data) {\n  let markup = [];\n\n  // Перебираю все страницы из бекенда для того чтобы зарендерить соответсвующее количество кнопок в пагинацию //\n  for (let i = 1; i <= data.total_pages; i += 1) {\n    markup.push(i);\n  }\n\n  return markup\n    .map(number => {\n      return `<li class=\"pagination-list__item\">\n            <button type=\"button\" class=\"pagination-list__btn\">${number}</button>\n        </li>`;\n    })\n    .join('');\n}\n","import { refs } from '../refs';\n\n// Вешаем события на кнопки листания вперед и назад и на кнопки с номером страницы\nrefs.btnNext.addEventListener('click', onBtnNext);\nrefs.btnPref.addEventListener('click', onBtnPref);\nrefs.paginationList.addEventListener('click', onPaginationList);\n\n// Делаю изначально кнопку листания назад и вперед неактивной\nrefs.btnPref.setAttribute('disabled', true);\n\n// Переменные для листания страниц\nlet page = 1;\nlet iterator = 1;\nlet transformValue = 0;\n\n// Функция для обработки клика по кнопке \"next\" для листания страниц //\nfunction onBtnNext() {\n  page += 1;\n\n  // Делаю активной кнопку листания назад\n  refs.btnPref.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector('.pagination-list__btn--active');\n  let parentBtnActive = btnActive.parentElement;\n  let nextParentBtnActive = parentBtnActive.nextElementSibling;\n  let nextBtnActive = nextParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      // console.log(data);\n      renderFilms(data);\n\n      const maxPage = data.total_pages;\n\n      // Вызоов функции для листания вперед\n      transformPaginationNext(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания вперед\n      giveAttributeBtnNext(page, maxPage);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика по кнопке \"prev\" для листания страниц //\nfunction onBtnPref() {\n  page -= 1;\n\n  // Делаю активной кнопку листания вперед\n  refs.btnNext.removeAttribute('disabled');\n\n  // Нахожу текущую и следующую активную кнопку для управления активным классом\n  let btnActive = document.querySelector(\n    '.pagination-list__item .pagination-list__btn--active'\n  );\n  let parentBtnActive = btnActive.parentElement;\n  let prevParentBtnActive = parentBtnActive.previousElementSibling;\n  let nextBtnActive = prevParentBtnActive.firstElementChild;\n\n  nextBtnActive.classList.add('pagination-list__btn--active');\n  btnActive.classList.remove('pagination-list__btn--active');\n\n  // Делаю запрос\n  fetchMovies(page)\n    .then(data => {\n      // console.log(data);\n      renderFilms(data);\n\n      // Вызоов функции для листания назад\n      transformPaginationPref(page, data);\n\n      // Вызов функции для добавления атрибута неактивности кнопке листания назад\n      giveAttributeBtnPref(page);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция для обработки клика непосредственно по кнопкам страниц для листания //\nfunction onPaginationList(evt) {\n  page = Number(evt.target.textContent);\n\n  const btnActive = document.querySelector('.pagination-list__btn--active');\n  const eventTarget = evt.target;\n\n  if (btnActive !== eventTarget) {\n    fetchMovies(page)\n      .then(data => {\n        // console.log(data);\n\n        renderFilms(data);\n\n        const maxPage = data.total_pages;\n\n        // Условия для того чтобы выбрать в какую сторону листаются страницы\n        if (Number(evt.target.textContent) > Number(btnActive.textContent)) {\n          // Вызов функции для листания страниц вперед\n          transformPaginationNextWithEvt(evt, page, data);\n        } else {\n          // Вызов функции для листания страниц назад\n          transformPaginationPrefWithEvt(evt, page, data);\n        }\n\n        // Снятие и добавление класса активности\n        btnActive.classList.remove('pagination-list__btn--active');\n        evt.target.classList.add('pagination-list__btn--active');\n\n        // Вызов функций для добавления атрибутов неактивности кнопкам листания вперед и назад когда пришли к первой или последней странице\n        giveAttributeBtnPref(page);\n        giveAttributeBtnNext(page, maxPage);\n      })\n      .catch(err => console.log(err));\n  }\n}\n\n// ========================================================================================\n\n// функции для добавления атрибута неактивности кнопке листания назад\nfunction giveAttributeBtnPref(page) {\n  if (page > 1) {\n    refs.btnPref.removeAttribute('disabled');\n  } else {\n    refs.btnPref.setAttribute('disabled', true);\n  }\n}\n\n// функции для добавления атрибута неактивности кнопке листания вперед\nfunction giveAttributeBtnNext(page, maxPage) {\n  if (page === maxPage) {\n    refs.btnNext.setAttribute('disabled', true);\n  } else {\n    refs.btnNext.removeAttribute('disabled');\n  }\n}\n\n// функции для листания вперед\nfunction transformPaginationNext(page, data) {\n  const maxPage = data.total_pages;\n\n  if (page > 3 && page <= maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n}\n\n// функции для листания назад\nfunction transformPaginationPref(page, data) {\n  const maxPage = data.total_pages;\n\n  if (page >= 3 && page < maxPage - 2) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n}\n\n// функции для листания страниц вперед при клике по номерам страниц\nfunction transformPaginationNextWithEvt(evt, page, data) {\n  const maxPage = data.total_pages;\n\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = evtTargetValue - btnActiveValue;\n  const condition = btnActiveValue === 1 || btnActiveValue === 2;\n  const condition2 =\n    evtTargetValue === maxPage - 2 || evtTargetValue === maxPage - 1;\n  const condition3 = btnActiveValue === maxPage - 3;\n\n  // Разные проверки для правильного листания страниц\n  if (page > 3 && page <= maxPage - 2 && total === 1 && !condition2) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (page > 3 && page <= maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n  }\n\n  if (condition && evtTargetValue === 4 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (condition && evtTargetValue === 5 && maxPage !== 5 && maxPage !== 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -80;\n    iterator += 2;\n  }\n\n  if (condition && evtTargetValue === 5 && maxPage !== 5 && maxPage === 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px - 40px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc((-40px) * ${iterator}))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += -40;\n    iterator += 1;\n  }\n}\n\n// функции для листания страниц назад при клике по номерам страниц\nfunction transformPaginationPrefWithEvt(evt, page, data) {\n  const maxPage = data.total_pages;\n  // Поиск текущей и следующей активной кнопки\n  const btnActiveValue = Number(\n    document.querySelector('.pagination-list__btn--active').textContent\n  );\n  const evtTargetValue = Number(evt.target.textContent);\n\n  // константы для проверки условий листаний страниц\n  const total = btnActiveValue - evtTargetValue;\n  const condition = evtTargetValue === 2 || evtTargetValue === maxPage - 3;\n  const condition2 =\n    btnActiveValue === maxPage || btnActiveValue === maxPage - 1;\n  const condition3 = evtTargetValue === maxPage - 3;\n  const condition4 = evtTargetValue === maxPage - 4;\n\n  // Разные проверки для правильного листания страниц\n  if (page >= 3 && page < maxPage - 2 && total === 1) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (page >= 3 && page < maxPage - 2 && total === 2 && !condition) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n  }\n\n  if (btnActiveValue === 4 && condition && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (condition2 && condition3 && maxPage !== 5) {\n    refs.paginationList.style.transform = `translateX(calc(40px + ${transformValue}px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n\n  if (condition2 && condition4 && maxPage !== 5 && maxPage !== 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 80px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 80;\n    iterator -= 2;\n  }\n\n  if (condition2 && condition4 && maxPage !== 5 && maxPage === 6) {\n    refs.paginationList.style.transform = `translateX(calc(${transformValue}px + 40px))`;\n    refs.paginationList.style.transition =\n      'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n    transformValue += 40;\n    iterator -= 1;\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","btnWatched","btnQueue","filmotekaList","btnPref","btnNext","paginationList","page","fetch","then","response","ok","Error","status","json","catch","err","console","log","data","markup","results","map","poster_path","title","release_date","genre_ids","id","genresArray","filmGenres","$ba79310b4d959419$var$genres","genres","genre","includes","push","join","length","split","innerHTML","$ba79310b4d959419$var$renderFilms","i","total_pages","number","$ba79310b4d959419$var$renderPagination","maxPage","style","justifyContent","setAttribute","classList","add","remove","array","localStorage","setItem","JSON","stringify","parse","getItem","addEventListener","$07cf3d5d1a26eab1$var$page","removeAttribute","btnActive","parentElement","nextElementSibling","firstElementChild","fetchMovies","renderFilms","page3","transform","$07cf3d5d1a26eab1$var$iterator","transition","$07cf3d5d1a26eab1$var$transformValue","$07cf3d5d1a26eab1$var$transformPaginationNext","$07cf3d5d1a26eab1$var$giveAttributeBtnNext","previousElementSibling","page4","$07cf3d5d1a26eab1$var$transformPaginationPref","$07cf3d5d1a26eab1$var$giveAttributeBtnPref","evt","Number","target","textContent","eventTarget","page5","btnActiveValue","evtTargetValue","total","condition","condition2","condition3","$07cf3d5d1a26eab1$var$transformPaginationNextWithEvt","page6","condition4","$07cf3d5d1a26eab1$var$transformPaginationPrefWithEvt","page1","page2"],"version":3,"file":"index.a6de3091.js.map"}